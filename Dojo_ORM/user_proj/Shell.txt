>>> user.objects.create(first_name = 'Dak', last_name = 'Prescot', email = 'dak@aol.com', age = 25)
<user: user object>
>>> user.objects.create(first_name = 'Jack', last_name = 'Jax', email = 'jax@aol.com', age = 33)
<user: user object>
>>> user.objects(all)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: 'Manager' object is not callable
>>> user.objects.all()
<QuerySet [<user: user object>, <user: user object>]>
>>> user.objects.last()
<user: user object>
>>> user.objects.first()
<user: user object>
>>> user.objects.count()
2
>>> user.objects.get(id = 1)
<user: user object>
>>> user.objects.order_by("first_name")
<QuerySet [<user: user object>, <user: user object>]>
>>> user.objects.create(first_name = 'Jimi', last_name = 'Hendrix', email = 'voodoochild@gmail.com', age = '74')
<user: user object>
>>> user.objects.create(first_name = 'Danny', last_name = 'Delete', email = 'dd@aol.com', age = 55)
<user: user object>
>>> user.object.order_by(last_name)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'user' has no attribute 'object'
>>> user.object.get(id = 4)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'user' has no attribute 'object'
>>> user.objects.get(id = 4)
<user: user object>
>>> user.objects.get(all)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\PREFER~1\PYTHON~1\MYENVI~1\DJANGO~1\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\PREFER~1\PYTHON~1\MYENVI~1\DJANGO~1\lib\site-packages\django\db\models\query.py", line 371, in get
    clone = self.filter(*args, **kwargs)
  File "C:\Users\PREFER~1\PYTHON~1\MYENVI~1\DJANGO~1\lib\site-packages\django\db\models\query.py", line 784, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "C:\Users\PREFER~1\PYTHON~1\MYENVI~1\DJANGO~1\lib\site-packages\django\db\models\query.py", line 802, in _filter_or_exclude
    clone.query.add_q(Q(*args, **kwargs))
  File "C:\Users\PREFER~1\PYTHON~1\MYENVI~1\DJANGO~1\lib\site-packages\django\db\models\sql\query.py", line 1250, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "C:\Users\PREFER~1\PYTHON~1\MYENVI~1\DJANGO~1\lib\site-packages\django\db\models\sql\query.py", line 1276, in _add_q
    allow_joins=allow_joins, split_subq=split_subq,
  File "C:\Users\PREFER~1\PYTHON~1\MYENVI~1\DJANGO~1\lib\site-packages\django\db\models\sql\query.py", line 1151, in build_filter
    arg, value = filter_expr
TypeError: 'builtin_function_or_method' object is not iterable
>>> user.objects.all
<bound method Manager.all of <django.db.models.manager.Manager object at 0x037C9A50>>
>>> user.objects.all()
<QuerySet [<user: user object>, <user: user object>, <user: user object>, <user: user object>]>
>>> user.objects.get(id = 1)
<user: user object>
>>> b = user.objects(id = 3)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: 'Manager' object is not callable
>>> b = user.objects.get(id= 3)
>>> b.last_name = 'Kendrix'
>>> b.save()
>>> user.objects.all().values()
<QuerySet [{'first_name': u'Dak', 'last_name': u'Prescot', 'created_at': datetime.datetime(2018, 3, 19, 15, 31, 59, 537000, tzinfo=<UTC>), 'updated_at': datetime.datetime(2018, 3, 19, 15, 31, 59, 537000, tzinfo=<UTC>), u'id': 1, 'email': u'dak@aol.com', 'age': 25}, {'first_name': u'Jack', 'last_name': u'Jax', 'created_at': datetime.datetime(2018, 3, 19, 15, 34, 35, 210000, tzinfo=<UTC>), 'updated_at': datetime.datetime(2018, 3, 19, 15, 34, 35, 210000, tzinfo=<UTC>), u'id': 2, 'email': u'jax@aol.com', 'age': 33}, {'first_name': u'Jimi', 'last_name': u'Kendrix', 'created_at': datetime.datetime(2018, 3, 19, 16, 18, 28, 249000, tzinfo=<UTC>), 'updated_at': datetime.datetime(2018, 3, 19, 16, 50, 38, 476000, tzinfo=<UTC>), u'id': 3, 'email': u'voodoochild@gmail.com', 'age': 74}, {'first_name': u'Danny', 'last_name': u'Delete', 'created_at': datetime.datetime(2018, 3, 19, 16, 20, 13, 139000, tzinfo=<UTC>), 'updated_at': datetime.datetime(2018, 3, 19, 16, 20, 13, 139000, tzinfo=<UTC>), u'id': 4, 'email': u'dd@aol.com', 'age': 55}]>
>>> user.objects.get(id=4).delete()
(1, {u'user_app.user': 1})
>>> user.objects.all().values()
<QuerySet [{'first_name': u'Dak', 'last_name': u'Prescot', 'created_at': datetime.datetime(2018, 3, 19, 15, 31, 59, 537000, tzinfo=<UTC>), 'updated_at': datetime.datetime(2018, 3, 19, 15, 31, 59, 537000, tzinfo=<UTC>), u'id': 1, 'email': u'dak@aol.com', 'age': 25}, {'first_name': u'Jack', 'last_name': u'Jax', 'created_at': datetime.datetime(2018, 3, 19, 15, 34, 35, 210000, tzinfo=<UTC>), 'updated_at': datetime.datetime(2018, 3, 19, 15, 34, 35, 210000, tzinfo=<UTC>), u'id': 2, 'email': u'jax@aol.com', 'age': 33}, {'first_name': u'Jimi', 'last_name': u'Kendrix', 'created_at': datetime.datetime(2018, 3, 19, 16, 18, 28, 249000, tzinfo=<UTC>), 'updated_at': datetime.datetime(2018, 3, 19, 16, 50, 38, 476000, tzinfo=<UTC>), u'id': 3, 'email': u'voodoochild@gmail.com', 'age': 74}]>
>>>